{"version":3,"sources":["reducers/track.js","reducers/index.js","reducers/currentUser.js","reducers/notification.js","reducers/search.js","store/store.js","serviceWorker.js","utilities/utilities.js","actions/index.js","components/mix/track-youtube.jsx","components/mix/mix.jsx","components/mix/mix-fader.jsx","components/pannel/pannel-search.jsx","components/buttons/button.jsx","components/buttons/iframe.jsx","components/buttons/button-load.jsx","components/pannel/pannel.jsx","router.js","index.js"],"names":["track","isActive","isPlaying","videoId","isLoading","gain","reducers","combineReducers","currentUser","state","arguments","length","undefined","Immutable","userData","JSON","parse","sessionStorage","getItem","isLoggedIn","token","refresh_token","timer","isFetchingRefresh","isLogin","action","type","set","withMutations","map","date","merge","data","notificationStates","message","typeNotification","time","trackStates","fader","selected","positionFader","firstTrack","secondTrack","get","setIn","searchStates","isFetching","videos","middleware","applyMiddleware","apply","concat","thunk","store","createStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","CONSTANTS","QUALITY","loadTrackStart","dispatch","loadTrack","setSelected","setPlaying","searchYT","toggleSearch","load","pause","toggleFader","loadYT","MixFader","toggleOver","_this","props","content","style","left","top","cursor","react_default","a","createElement","className","onClick","render","Component","PannelSearch","input","React","createRef","youtubeSearch","term","YTSearch","key","setState","clickHandle","video","id","setSound","changeHandle","value","current","listSearch","vid","i","snippet","title","ref","onChange","Mix","innerWidth","total","buttons","name","icon","function","play","stop","componentDidMount","loadYoutube","Promise","resolve","reject","tag","document","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","YT","player","Player","youtubePlayerAnchorOne","width","height","playerVars","controls","rel","events","onReady","onReadyYoutube","playerTwo","youtubePlayerAnchorTwo","err","event","target","setVolume","trackNumber","playVideo","stopVideo","pauseVideo","sound","loadVideoById","fillButtons","button","toLowerCase","setFaderMix","position","porcSecondTrack","porcFirstTrack","onPointerHandle","e","screenX","Fragment","onPointerMove","r","mix_fader","Object","assign","pannel_search","this","documentElement","getElementsByClassName","focus","firstSound","YouTubePlayer","secondSound","Pannel","_this$props","createSound","file","assertThisInitialized","Pizzicato","Sound","source","options","path","volume","mix","Router","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","BrowserRouter","basename","Switch","pannel","getContent","connect","bindActionCreators","actions","es","router","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6a93633b.chunk.js","sourcesContent":["import * as Immutable from \"immutable\";\n\nconst track = {\n  isActive: false,\n  isPlaying: false,\n  videoId: \"S-sJp1FfG7Q\",\n  isLoading: false,\n  gain: 50\n};\n\nexport function trackStates(\n  state = Immutable.fromJS({\n    fader: false,\n    selected: 0,\n    positionFader:0,\n    firstTrack: track,\n    secondTrack: {}\n  }),\n  action\n) {\n  switch (action.type) {\n    case \"LOAD_TRACK_START\":\n      if (state.get(\"selected\") === 0) {\n        return state.withMutations(map => {\n          map.setIn([\"firstTrack\", \"isLoading\"], true);\n        });\n      } else {\n        return state.withMutations(map => {\n          map.setIn([\"secondTrack\", \"isLoading\"], true);\n        });\n      }\n    case \"LOAD_TRACK_END\":\n      if (state.get(\"selected\") === 0) {\n        return state.withMutations(map => {\n          map\n            .setIn([\"firstTrack\", \"videoId\"], action.data)\n            .setIn([\"firstTrack\", \"isLoading\"], false);\n        });\n      } else {\n        return state.withMutations(map => {\n          map\n            .setIn([\"secondTrack\", \"videoId\"], action.data)\n            .setIn([\"secondTrack\", \"isLoading\"], false);\n        });\n      }\n    case \"PAUSE_TRACK\":\n      if (state.get(\"selected\") === 0) {\n        return state.withMutations(map => {\n          map.setIn([\"firstTrack\", \"isPLaying\"], false);\n        });\n      } else {\n        return state.withMutations(map => {\n          map.setIn([\"secondTrack\", \"isPLaying\"], false);\n        });\n      }\n    case \"SET_PLAYING_TRACK\":\n      return state.withMutations(map => {\n        if (action.data === 0) {\n          map.setIn([\"firstTrack\", \"isPlaying\"], true);\n        } else {\n          map.setIn([\"secondTrack\", \"isPlaying\"], true);\n        }\n      });\n    case \"SET_GAIN\":\n    return state.withMutations(map => {\n      if (action.data === 0) {\n        map.setIn([\"firstTrack\", \"gain\"], true);\n      } else {\n        map.setIn([\"secondTrack\", \"gain\"], true);\n      }\n    });\n    case \"SET_SELECTED_TRACK\":\n      return state.withMutations(map => {\n        map.set(\"selected\", action.data);\n      });\n    case \"TOGGLE_FADER\":\n      return state.withMutations(map => {\n        map.set(\"fader\", action.data);\n      });\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { currentUser } from './currentUser';\nimport { notificationStates } from './notification'\nimport { trackStates } from './track'\nimport { searchStates } from \"./search\"\n\nexport const reducers = combineReducers({\n    currentUser,\n    notificationStates,\n    trackStates,\n    searchStates\n});","import * as Immutable from \"immutable\";\n\nexport function currentUser(\n  state = Immutable.fromJS({\n    userData: Immutable.fromJS(JSON.parse(sessionStorage.getItem(\"loggIn\"))),\n    isLoggedIn:\n      sessionStorage.getItem(\"loggIn\") &&\n      sessionStorage.getItem(\"token\") &&\n      sessionStorage.getItem(\"refresh_token\")\n        ? true\n        : false,\n    token: sessionStorage.getItem(\"token\")\n      ? sessionStorage.getItem(\"token\")\n      : \"\",\n    refresh_token: sessionStorage.getItem(\"refresh_token\")\n      ? sessionStorage.getItem(\"refresh_token\")\n      : \"\",\n    timer: sessionStorage.getItem(\"timer\")\n      ? sessionStorage.getItem(\"timer\")\n      : false,\n    isFetchingRefresh: false,\n    isLogin: false\n  }),\n  action\n) {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return state.set(\"isLogin\",true);\n    case 'REFRESH_TOKEN_START':\n      return state.set('isFetchingRefresh', true);\n    case 'REFRESH_TOKEN_END':\n      return state.withMutations((map) => {\n        map.set('isFetchingRefresh', false)\n            .set('refresh_token', action.refresh_token)\n            .set('token', action.token)\n            .set('timer', action.timer)\n      });\n    case 'SET_TIMER':\n      return state.set('timer', action.date);\n    case 'LOGIN_USER_END':\n      return state.withMutations((map) => {\n        map.set('userData', Immutable.fromJS(action.userData))\n          .set('isLoggedIn', true)\n          .set('timer', action.timer)\n          .set(\"isLogin\",false)\n      });\n    case 'LOGOUT':\n      return state.withMutations((map) => {\n        map.set('userData', Immutable.fromJS({}))\n          .set('isLoggedIn', false)\n          .set('timer', false)\n      });\n    case 'GET_TOKEN_END':\n      debugger\n      return state.merge(Immutable.fromJS(action.data));\n    default:\n      return state;\n  }\n}\n","import * as Immutable from \"immutable\";\n\nexport function notificationStates(\n  state = Immutable.fromJS({\n    isActive: false,\n    message: null,\n    typeNotification: null,\n    time: 3800\n  }),\n  action\n) {\n  switch (action.type) {\n    case 'ACTIVE_NOTIFICATION':\n    debugger\n        return state.withMutations((map)=>{\n            map.set(\"isActive\",true)\n                .set(\"message\", action.message)\n                .set(\"typeNotification\",action.typeNotification)\n        })\n    case 'DESACTIVE_NOTIFICATION':\n        return state.withMutations((map)=>{\n            map.set(\"isActive\",false)\n                .set(\"message\", null)\n                .set(\"typeNotification\",null)\n        })\n    default:\n      return state;\n  }\n}\n","import * as Immutable from \"immutable\";\n\nconst video = {\n  name: \"\"\n};\n\nexport function searchStates(\n  state = Immutable.fromJS({\n    isFetching: false,\n    isActive: false,\n    videos: []\n  }),\n  action\n) {\n  switch (action.type) {\n    case \"TOGGLE_SEARCH\":\n      return state.set(\"isActive\", !state.get(\"isActive\"));\n    case \"SEARCH_END\":\n      return state.set(\"videos\", Immutable.fromJS(action.data));\n    default:\n      return state;\n  }\n}\n","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport freeze from \"redux-freeze\";\nimport { reducers } from \"../reducers/index\";\nimport {jwt} from \"../middleware/jwt\"\n\nlet middlewares = [];\n\n// middlewares.push(jwt);\n\nif (process.env.NODE_ENV !== 'production') {\n  middlewares.push(freeze);\n}\n\nlet middleware = applyMiddleware(...middlewares, thunk);\n\nif (process.env.NODE_ENV !== 'production' && window.devToolsExtension) {\n  middleware = compose(middleware, window.devToolsExtension());\n}\n\nconst store = createStore(reducers, middleware);\n\nexport { store }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import moment from 'moment';\n\n// export function dataURIToBlob(dataURI) {\n//   const binStr = atob(dataURI.split(',')[1]);\n\n//   let len = binStr.length,\n//       arr = new Uint8Array(len);\n\n//   const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n\n//   for (var i = 0; i < len; i++) {\n//     arr[i] = binStr.charCodeAt(i);\n//   }\n\n//   return new Blob([arr], {\n//     type: mimeString\n//   });\n// }\n\nexport function isValidToken(date){\n  if(!date){ return true };\n  const diff = moment.duration(moment().diff(moment(date)));\n  return diff.seconds() <= 300;\n}\n\nexport function removeSessionStorage(){\n  sessionStorage.removeItem('loggIn');\n  sessionStorage.removeItem('refresh_token');\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('timer');\n}\n\nexport const CONSTANTS = {\n  QUALITY: 'media'\n};","import { APIURL } from \"./constants\";\n// import axios from 'axios';\n// import CryptoJS from 'crypto-js';\nimport { removeSessionStorage } from \"../utilities/utilities\";\nimport moment from \"moment\";\n\n// //LOGIN\n// export function refreshToken(dispatch, states){\n//   const currentUser = states.currentUser;\n\n//   return new Promise((resolve, reject) => {\n//     if(currentUser.get('isFetchingRefresh')){ resolve(200); return false; }\n//     dispatch(isFetchingRefreshStart())\n//     const request = axios({\n//       method: 'POST',\n//       headers: {\n//         'Authorization': `Bearer ${ currentUser.get('refresh_token') }`,\n//         'Content-Type': 'application/json;charset=UTF-8'\n//       },\n//       url: APIURL + '/refresh',\n//       data: {}\n//     });\n\n//     return request.then(\n//       (response) => {\n//         debugger\n//         if(response.data.estado.codigoEstado === 200){\n//           dispatch(isFetchingRefreshEnd(response.data.data.token, response.data.data.refresh_token, moment().format('YYYY/MM/DD/ HH:mm:ss')))\n//           sessionStorage.setItem('token', response.data.data.token);\n//           sessionStorage.setItem('refresh_token', response.data.data.refresh_token);\n//           sessionStorage.setItem('timer', moment().format('YYYY/MM/DD/ HH:mm:ss'));\n//           resolve(200);\n//         }else{\n//           dispatch(isFetchingRefreshEnd('', ''))\n//           removeSessionStorage();\n//           dispatch(logout());\n//         }\n//       },\n//       (err) => {\n//         dispatch(isFetchingRefreshEnd('', ''))\n//         removeSessionStorage();\n//         dispatch(logout())\n//       }\n//     )\n//   });\n// }\n\n// function isFetchingRefreshStart(){\n//   return {\n//     type: 'REFRESH_TOKEN_START'\n//   }\n// }\n// function isFetchingRefreshEnd(){\n//   return {\n//     type: 'REFRESH_TOKEN_END'\n//   }\n// }\n\n// export function loginUser(data){\n//   debugger\n//   return function action(dispatch){\n//     dispatch(loginUserStart());\n//     getToken(data, dispatch).then((response) => {\n//       if(response.data.estado.codigoEstado === 200){\n//         debugger\n//         loginUserData(response.data.data, data, dispatch)\n//       }\n//     });\n//   }\n// }\n\n// function getToken(data, dispatch){\n//   let wordArray = CryptoJS.enc.Utf8.parse(data.rut);\n//   let base64 = CryptoJS.enc.Base64.stringify(wordArray);\n//   data.rut = base64;\n//   wordArray = CryptoJS.enc.Utf8.parse(data.pass);\n//   base64 = CryptoJS.enc.Base64.stringify(wordArray);\n//   data.pass = base64;\n//   return new Promise((resolve, reject) => {\n//     const request = axios({\n//       method: 'POST',\n//       headers: {\n//         'Authorization': `Basic ${ btoa(data.rut + ':' + data.pass) }`,\n//         // 'Authorization': `Basic ${ btoa(BTOA) }`,\n//         'Content-Type': 'application/json;charset=UTF-8'\n//       },\n//       url: APIURL + '/token',\n//       data: {}\n//     });\n\n//     return request.then((response) => {\n//       resolve(response);\n//       dispatch(getTokenEnd(response.data.data));\n//     }).catch((error) => {\n//       dispatch(loginUserError(error.response ? error.response.data.estado.glosaEstado : 'Error de conexión, intente nuevamente'));\n//     });\n//   });\n// }\n\n// function loginUserData(tokens, data, dispatch){\n//   debugger\n//   const request = axios({\n//     method: 'POST',\n//     headers: {\n//       'Authorization': `Bearer ${ tokens.token }`,\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     url: APIURL + '/login',\n//     data: {\n//       rut: data.rut,\n//       pass: data.pass\n//     }\n//   });\n\n//   return request.then(\n//     (response) => {\n//       debugger\n//       if(response.data.estado.codigoEstado === 200){\n//         const timer = moment().format('YYYY/MM/DD/ HH:mm:ss');\n//         sessionStorage.setItem('loggIn', JSON.stringify(response.data.data));\n//         sessionStorage.setItem('token', tokens.token);\n//         sessionStorage.setItem('refresh_token', tokens.refresh_token);\n//         sessionStorage.setItem('timer', timer);\n//         dispatch(loginUserEnd(response.data.data, timer));\n//       }else{\n//         debugger\n//         dispatch(loginUserError(response.data.estado.glosaEstado ? response.data.estado.glosaEstado : 'Ha ocurrido un error inesperado, intente nuevamente'));\n//       }\n//     },\n//     (err) => {\n//       debugger\n//       dispatch(loginUserError(err.response ? err.response.data.estado.glosaEstado : 'Error de conexión, intente nuevamente'));\n//     }\n//   )\n// }\n\n// function loginUserStart(){\n//   return {\n//     type: 'LOGIN_START'\n//   }\n// }\n\n// function loginUserError(error){\n//   return {\n//     type: 'LOGIN_ERROR',\n//     error\n//   }\n// }\n\n// function loginUserEnd(userData, timer){\n//   return {\n//     type: 'LOGIN_USER_END',\n//     userData,\n//     timer\n//   }\n// }\n\n// function getTokenEnd(data){\n//   return {\n//     type: 'GET_TOKEN_END',\n//     data\n//   }\n// }\n\n// export function logout() {\n//   return function action(dispatch) {\n//     debugger\n//     sessionStorage.removeItem(\"loggIn\");\n//     sessionStorage.removeItem(\"token\");\n//     sessionStorage.removeItem(\"refresh_token\");\n//     sessionStorage.removeItem(\"timer\");\n//     dispatch({ type: \"LOGOUT\"});\n//   }\n// }\n\n// export function recoverPass(data) {\n//   return function action(dispatch){\n//     dispatch(activeNotification({typeNotification:\"success\",message:\"Se ha enviado el correo\"}));\n//     setTimeout(() => {\n//       dispatch(desactiveNotification());\n//     }, 3800);\n//     // const request = axios({\n//     //   method: 'POST',\n//     //   headers: {\n//     //     'Content-Type': 'application/json;charset=UTF-8'\n//     //   },\n//     //   url: APIURL + '/login',\n//     //   data: {\n//     //     rut: data.rut,\n//     //     pass: data.pass\n//     //   }\n//     // });\n\n//     // return request.then(\n//     //   (response) => {\n//     //     debugger\n//     //     if(response.data.estado.codigoEstado === 200){\n//     //     }else{\n//     //       debugger\n//     //       dispatch(loginUserError(response.data.estado.glosaEstado ? response.data.estado.glosaEstado : 'Ha ocurrido un error inesperado, intente nuevamente'));\n//     //     }\n//     //   },\n//     //   (err) => {\n//     //     debugger\n//     //     dispatch(loginUserError(err.response ? err.response.data.estado.glosaEstado : 'Error de conexión, intente nuevamente'));\n//     //   }\n//     // )\n\n//   }\n// }\n\n// function activeNotification(data){\n//   return {\n//     type: \"ACTIVE_NOTIFICATION\",\n//     typeNotification: data.typeNotification,\n//     message: data.message\n//   }\n// }\n\n// export function desactiveNotification(){\n//   return {\n//     type: \"DESACTIVE_NOTIFICATION\"\n//   }\n// }\n\nexport function loadTrackStart(data) {\n  return function action(dispatch) {\n    dispatch({ type: \"LOAD_TRACK_START\", data });\n  };\n}\nexport function loadTrack(data) {\n  return function action(dispatch) {\n    dispatch({\n      type: \"LOAD_TRACK_END\",\n      data\n    });\n  };\n}\nexport function setSelected(data) {\n  return function action(dispatch) {\n    dispatch({\n      type: \"SET_SELECTED_TRACK\",\n      data\n    });\n  };\n}\nexport function setPlaying(data) {\n  return function action(dispatch) {\n    dispatch({\n      type: \"SET_PLAYING_TRACK\",\n      data\n    });\n  };\n}\nexport function searchYT(data){\n  return function action(dispatch){\n    dispatch({type:\"SEARCH_END\",data})\n  }\n}\nexport function toggleSearch(){\n  return function action(dispatch){\n    dispatch({type:\"TOGGLE_SEARCH\"})\n  }\n}\nexport function load(data){\n  return function action(dispatch){\n    dispatch({type:\"SEARCH_END\",data})\n  }\n}\nexport function pause(data){\n  return function action(dispatch){\n    dispatch({type:\"PAUSE_TRACK\"})\n  }\n}\nexport function toggleFader(data){\n  return function action(dispatch){\n    dispatch({type:\"TOGGLE_FADER\",data})\n  }\n}","import React, { Component } from \"react\";\nimport Youtube from \"react-youtube\";\nlet loadYT;\nclass TrackYT extends Component {\n  componentDidUpdate = (prevProps) =>{\n    debugger\n  }\n  componentDidMount = () => {\n    if (!loadYT) {\n      loadYT = new Promise(resolve => {\n        const tag = document.createElement(\"script\");\n        tag.src = \"https://www.youtube.com/iframe_api\";\n        const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => resolve(window.YT);\n      });\n    }\n    loadYT.then(YT => {\n      this.player = new YT.Player(this.youtubePlayerAnchorOne, {\n        videoId: \"S-sJp1FfG7Q\",\n        height: this.props.height || 390,\n        width: this.props.width || 640,\n        events: {\n          onStateChange: this.props.onPlayerStateChange\n        }\n      });\n      this.playerTwo = new YT.Player(this.youtubePlayerAnchorTwo, {\n        videoId: \"S-sJp1FfG7Q\",\n        height: this.props.height || 390,\n        width: this.props.width || 640,\n        events: {\n          onStateChange: this.props.onPlayerStateChange\n        }\n      });\n    });\n  };\n  onPlayerStateChange = event => {\n    debugger;\n  };\n  setSelected = () => {\n    const { trackNumber } = this.props;\n    this.props.setSelected(trackNumber);\n  };\n\n  content = () => {\n    // const { trackStates, trackNumber } = this.props,\n    //     selected = trackStates.get(\"selected\"),\n    //     trackState = trackNumber===0?trackStates.get(\"firstTrack\"):trackStates.get(\"secondTrack\"),\n    //     videoId = trackState.get(\"videoId\"),\n    //     isPlaying = trackState.get(\"isPlaying\");\n    // let classSelected = selected===trackNumber?\" selected\": \"\";\n    debugger;\n    return (\n      <div className=\"mixtrack\">\n        <div\n          ref={r => {\n            debugger\n            this.youtubePlayerAnchorOne = r;\n          }}\n        />\n                <div\n          ref={r => {\n            debugger\n            this.youtubePlayerAnchorTwo = r;\n          }}\n        />\n      </div>\n    );\n  };\n  render = () => {\n    return this.content();\n  };\n}\n\nexport default TrackYT;\n","import React, { Component } from \"react\";\nimport MixFader from \"./mix-fader\";\nimport TrackYT from \"./track-youtube\";\nimport PannelSearch from \"../pannel/pannel-search\";\nimport { CONSTANTS } from \"../../utilities/utilities\";\n\nlet loadYT;\n\nclass Mix extends Component {\n  state = {\n    positionFader: window.innerWidth / 2 - 5,\n    total: window.innerWidth,\n    buttons: [\n      {\n        type: \"CURRENT\",\n        name: \"PLAY\",\n        icon: \"\",\n        function: () => {\n          this.play();\n        }\n      },\n      {\n        type: \"CURRENT\",\n        name: \"PAUSE\",\n        icon: \"\",\n        function: () => {\n          this.pause();\n        }\n      },\n      {\n        type: \"CURRENT\",\n        name: \"STOP\",\n        icon: \"\",\n        function: () => {\n          this.stop();\n        }\n      },\n      {\n        type: \"LOAD\",\n        name: \"LOAD\",\n        icon: \"\",\n        function: () => {\n          this.toggleSearch();\n        }\n      }\n    ]\n  };\n  componentDidMount = () => {\n    if (loadYT === undefined) {\n      this.loadYoutube();\n    }\n  };\n  loadYoutube = () => {\n    loadYT = new Promise((resolve, reject) => {\n      const tag = document.createElement(\"script\");\n      tag.src = \"https://www.youtube.com/iframe_api\";\n      const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n      return window.onYouTubeIframeAPIReady = () => resolve(window.YT)\n    });\n    \n    loadYT\n      .then(YT => {\n        this.player = new YT.Player(this.youtubePlayerAnchorOne, {\n          videoId: \"S-sJp1FfG7Q\",\n          width: \"100%\",\n          height: \"100%\",\n          playerVars: {\n            controls: 0,\n            rel: 0\n          },\n          events: {\n            onReady: this.onReadyYoutube\n          }\n        });\n        this.playerTwo = new YT.Player(this.youtubePlayerAnchorTwo, {\n          videoId: \"zzkf4x1grXY\",\n          width: \"100%\",\n          height: \"100%\",\n          playerVars: {\n            controls: 0,\n            rel: 0\n          },\n          events: {\n            onReady: this.onReadyYoutube\n          }\n        });\n      })\n      .catch(err => {\n        debugger\n        console.log(err);\n      });\n  };\n  onReadyYoutube = event => {\n    event.target.setVolume(50);\n  };\n  //BUTTONS EVENTS\n  setSelected = trackNumber => {\n    this.props.setSelected(trackNumber);\n  };\n  play = () => {\n    const { trackStates } = this.props,\n      selected = trackStates.get(\"selected\");\n    selected === 0\n      ? this.player.playVideo()\n      : this.playerTwo.playVideo().playVideo();\n  };\n  stop = () => {\n    const { trackStates } = this.props,\n      selected = trackStates.get(\"selected\");\n    selected === 0 ? this.player.stopVideo() : this.playerTwo.stopVideo();\n  };\n  pause = () => {\n    const { trackStates } = this.props,\n      selected = trackStates.get(\"selected\");\n    selected === 0 ? this.player.pauseVideo() : this.playerTwo.pauseVideo();\n  };\n  setSound = sound => {\n    const { trackStates } = this.props,\n      selected = trackStates.get(\"selected\");\n    selected === 0\n      ? this.player.loadVideoById(sound, 0, CONSTANTS.QUALITY)\n      : this.playerTwo.loadVideoById(sound, 0, CONSTANTS.QUALITY);\n    this.props.toggleSearch();\n  };\n  toggleSearch() {\n    this.props.toggleSearch();\n    const find = document.documentElement.getElementsByClassName(\"find\")[0];\n    find.focus();\n  }\n  fillButtons = () => {\n    return this.state.buttons.map((button, i) => {\n      return (\n        <div key={i} className={button.name.toLowerCase() + \" button\"}>\n          <button\n            onClick={() => {\n              button.function();\n            }}\n          >\n            {button.name}\n          </button>\n        </div>\n      );\n    });\n  };\n  setFaderMix = position => {\n    const { total } = this.state,\n      porcSecondTrack = (position * 100) / total,\n      porcFirstTrack = 100 - porcSecondTrack;\n      this.player.setVolume(porcFirstTrack);\n      this.playerTwo.setVolume(porcSecondTrack);\n  };\n\n  onPointerHandle = (e) => {\n    const { trackStates } = this.props;\n    if(!trackStates.get(\"fader\")){\n      return;\n    }else{\n      let left = e.screenX;\n      if(left>this.state.total - 10){\n        left = this.state.total - 10;\n      }else if(left<20){\n        left = 10;\n      }\n      this.setState({positionFader:left},()=>{\n        this.setFaderMix(this.state.positionFader)\n      });\n    }\n  };\n  content = () => {\n    const { trackStates } = this.props,\n      selected = trackStates.get(\"selected\");\n    return (\n      <React.Fragment>\n        <div\n          className=\"mix\"\n          onPointerMove={e => {\n            this.onPointerHandle(e);\n          }}\n        >\n          <div\n            className={`mixtrack ${selected === 0 ? \" selected\" : \"\"}`}\n            onClick={() => {\n              this.setSelected(0);\n            }}\n          >\n            <div\n              ref={r => {\n                // debugger;\n                this.youtubePlayerAnchorOne = r;\n              }}\n            />\n          </div>\n          <MixFader setFaderMix={this.setFaderMix} {...this.props} positionFader={this.state.positionFader}/>\n          <div\n            className={`mixtrack secondVideo${\n              selected === 1 ? \" selected\" : \"\"\n            }`}\n            onClick={() => {\n              this.setSelected(1);\n            }}\n          >\n            <div\n              ref={r => {\n                // debugger;\n                this.youtubePlayerAnchorTwo = r;\n              }}\n            />\n          </div>\n          <PannelSearch {...this.props} setSound={this.setSound} />\n        </div>\n        <div className=\"buttons\">{this.fillButtons()}</div>\n      </React.Fragment>\n    );\n  };\n  render = () => {\n    return this.content();\n  };\n}\n\nexport default Mix;\n","import React, { Component } from \"react\";\n\nclass MixFader extends Component {\n  toggleOver = () => {\n    const { trackStates } = this.props;\n    this.props.toggleFader(!trackStates.get(\"fader\"));\n  };\n  content = () => {\n    const style = {\n      left: this.props.positionFader - 10,\n      top: 0\n    };\n    const { trackStates } = this.props;\n    if(trackStates.get(\"fader\")){\n      style.cursor = \"col-resize\";\n    }else{\n      style.cursor = \"pointer\";\n    }\n    return (\n      <div\n        style={style}\n        className={trackStates.get(\"fader\") ? \"mixfader over\" : \"mixfader\"}\n        onClick={() => {\n          this.toggleOver();\n        }}\n      />\n    );\n  };\n  render = () => {\n    return this.content();\n  };\n}\n\nexport default MixFader;\n","import React, { Component } from \"react\";\nimport YTSearch from \"youtube-api-search\"\nimport Mix from \"../mix/mix\";\n\nclass PannelSearch extends Component {\n    state = {\n        videos: []\n    }\n  input = React.createRef();\n  youtubeSearch = (term) => {\n    YTSearch({key:\"AIzaSyDXHdaBBkea1HeDMBlcpu5f0VWVRHg_8Ls\",term},(data)=>{\n        // debugger\n        this.setState({videos:data})\n    })\n  }\n  clickHandle = (video) => {\n    const {id} = video;\n    this.props.setSound(id.videoId);\n  }\n  changeHandle = () => {\n      const value = this.input.current.value;\n      this.youtubeSearch(value);\n  }\n  listSearch = () => {\n      const { videos } = this.state;\n    // debugger\n    const vid = videos.map((map,i)=>{\n        return <span key={map.id.videoId} onClick={()=>{this.clickHandle(map)}}>{map.snippet.title}</span>\n    })\n\n    return <div className=\"list\">{vid}</div>\n  }\n  content = () => {\n      const { searchStates } = this.props,\n        isActive = searchStates.get(\"isActive\");\n    return (\n      <div className={`pannel-search ${isActive?'active':''}`}>\n        <input className=\"find\" type=\"text\" ref={this.input} onChange={()=>{this.changeHandle()}}/>\n        {this.listSearch()}\n      </div>\n    );\n  };\n\n  render = () => {\n    return this.content();\n  };\n}\n\nexport default PannelSearch;\n","import React, { Component } from \"react\";\n\nclass Button extends Component {\n  content = () => {\n\n  };\n  render = () => {\n    return this.content();\n  };\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\n\nclass IframeLoad extends Component {\n\n    iframe = () => {\n        return{\n            __html: '<iframe id=\"myIframe\" src=\"https://www.download-mp3-youtube.com/api/?api_key=MjkzOTcyNDA0&format=mp3&video_id=8wH03OHveuo\" className=\"hide\"/>'\n        }\n    }\n\n    clickhandle = () => {\n        debugger\n    }\n\n  content = () => {\n    return (\n        \n        <div onClick={()=>{this.clickhandle()}}  >\n        <a href='https://www.convertmp3.io/download/get/?i=AciHff78ZN1R9MBrcuVSKb4QAJNKO4tS&e=49&v=IWyG4zPvjqg&progressType=button&color=3880f3'>HOla</a>\n        </div>\n    );\n  };\n  render = () => {\n    return this.content();\n  };\n}\n\nexport default IframeLoad;\n","import React, { Component } from \"react\";\nimport IframeLoad from \"./iframe\";\nimport axios from \"axios\";\n\nclass ButtonLoad extends Component {\n  input = React.createRef();\n  componentDidMount = () => {\n    // const reqData = {\n    //   format: \"JSON\",\n    //   id: \"admi8wH03OHveuon123\"\n    // };\n    // const data = Object.keys(reqData)\n    //   .map(function(key) {\n    //     return encodeURIComponent(key) + \"=\" + encodeURIComponent(reqData[key]);\n    //   })\n    //   .join(\"&\");\n    // const request = axios({\n    //   method: \"POST\",\n    //   withCredentials: true,\n    //   crossdomain: true,\n    //   data,\n    //   // url: 'https://coolguruji-youtube-to-mp3-download-v1.p.mashape.com/?id=8wH03OHveuo'\n    //   url: \"http://api.youtube6download.top/api/\"\n    // });\n    // return request.then(\n    //   response => {\n    //     debugger;\n    //   },\n    //   err => {\n    //     debugger;\n    //   }\n    // );\n    // https://www.convertmp3.io/download/get/?i=n3FPxVif7cwTfJPAUXYyEgmG2j8G8KpG&e=60&v=8wH03OHveuo\n  };\n  handleChange = () => {\n    const file = this.input.current.files[0],\n      { loadTrack, createSound } = this.props,\n      objectURL = window.URL.createObjectURL(file),\n      filename = file.name;\n\n    loadTrack({ file: objectURL, filename });\n    createSound(objectURL);\n    this.input.current.value = \"\";\n  };\n  content = () => {\n    const { button } = this.props;\n    return (\n      <div className=\"button\">\n        <input\n          ref={this.input}\n          type=\"file\"\n          accept=\".mp3\"\n          className=\"hide\"\n          onChange={() => {\n            this.handleChange();\n          }}\n        />\n        <button\n          onClick={() => {\n            this.input.current.click();\n          }}\n        >\n          {button.name}\n        </button>\n      </div>\n    );\n  };\n  render = () => {\n    return this.content();\n  };\n}\n\nexport default ButtonLoad;\n","import React, { Component } from \"react\";\nimport Mix from \"../mix/mix\";\nimport Button from \"../buttons/button\";\nimport ButtonLoad from \"../buttons/button-load\";\nimport Pizzicato from \"pizzicato\";\nimport YouTubePlayer from \"youtube-player\";\n\nlet firstSound = YouTubePlayer();\nlet secondSound = YouTubePlayer();\n\nclass Pannel extends Component {\n  pause = () => {\n    this.props.pause();\n  };\n\n  play = () => {\n    const { trackStates, setPlaying } = this.props,\n      selected = trackStates.get(\"selected\");\n    selected === 0 ? firstSound.playVideo() : secondSound.playVideo();\n  };\n\n  stop = () => {\n    const { trackStates } = this.props,\n      selected = trackStates.get(\"selected\");\n    selected === 0 ? firstSound.stopVideo() : secondSound.stopVideo();\n  };\n\n  setSound = sound => {\n    const { trackStates } = this.props,\n      selected = trackStates.get(\"selected\");\n    selected === 0 ? (firstSound = sound) : (secondSound = sound);\n  };\n\n  toggleSearch = () => {\n    this.props.toggleSearch();\n  };\n\n  createSound = file => {\n    const { setSound } = this;\n    if (file) {\n      let sound = new Pizzicato.Sound(\n        {\n          source: \"file\",\n          options: { path: file, volume: 0.5 }\n        },\n        function() {\n          sound.play();\n          setSound(sound);\n        }\n      );\n    }\n  };\n\n  fillButtons = () => {\n    return this.state.buttons.map((button, i) => {\n      return (\n        <div key={i} className={button.name.toLowerCase() + \" button\"}>\n          <button\n            onClick={() => {\n              button.function();\n            }}\n          >\n            {button.name}\n          </button>\n        </div>\n      );\n    });\n  };\n\n  content = () => {\n    return (\n      <div\n        className=\"pannel\"\n      >\n        <Mix {...this.props} setFaderMix={this.setFaderMix}/>\n      </div>\n    );\n  };\n\n  render = () => {\n    return this.content();\n  };\n}\n\nexport default Pannel;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Redirect } from \"react-router-dom\";\n// import { Route } from \"react-router\";\nimport * as actions from \"./actions/index\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport \"./assets/css/main.scss\";\n\nimport Pannel from './components/pannel/pannel'\n\n\nexport class Router extends Component {\n  getContent() {\n    // const { currentUser } = this.props;\n    // debugger;\n      return (\n        <BrowserRouter basename=\"\">\n          <Switch>\n            <Pannel {...this.props}/>\n          </Switch>\n        </BrowserRouter>\n      );\n  }\n  render() {\n    const content = this.getContent();\n\n    return <React.Fragment>{content}</React.Fragment>;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Router);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store.js';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './router';\n\n// render(\n//   <Router>\n//     <AppRoutes />\n//   </Router>,\n//   document.getElementById('root')\n// );\n\nrender(\n  <Provider store={store}>\n    <Router/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}